version: '3'
services:
  client:
    image: node:18.16.0-alpine3.16
    environment:
      - http_proxy
      - https_proxy
      - no_proxy=server,${no_proxy:-}
    volumes:
      - ./client:/app
      - /app/node_modules
      - /app/.angular
    command:
      - /bin/sh
      - -e
      - -x
      - -c
      - |
        npm install
        exec npm start -- \
          --host 0.0.0.0 \
          --poll 1000 \
          --proxy-config proxy.conf.js
    working_dir: /app
    ports:
      - 4200:4200
    depends_on:
      - server
      - storage
  server:
    image: golang:1.20.4-bullseye
    environment:
      - http_proxy
      - https_proxy
      - no_proxy=storage,firestore,${no_proxy:-}
      - CLOUDSDK_CORE_PROJECT=pictmanager
      - PICTMANAGER_GCS=gs://pictmanager
      - PICTMANAGER_GCSPUBLICBASE=http://localhost:4200/image
      - FIRESTORE_EMULATOR_HOST=firestore:8080
      - STORAGE_EMULATOR_HOST=storage:4443
    volumes:
      - .:/app
    working_dir: /app
    depends_on:
      - firestore
      - storage
    command:
      - /bin/bash
      - -e
      - -x
      - -c
      - |
        if [[ ! -f "/go/bin/air" ]]; then
          go install github.com/cosmtrek/air@v1.43.0
        fi
        air
  firestore:
    build:
      context: docker/firestore
      args:
        - http_proxy
        - https_proxy
    environment:
      - CLOUDSDK_CORE_PROJECT=pictmanager
    volumes:
      - /data
    ports:
      # firebase UI が firestore にクライアントから接続させるので firestore もポートの公開が必要
      - 8080:8080
      - 4000:4000
  storage:
    image: fsouza/fake-gcs-server:1.44.2
    volumes:
      - ./docker/storage:/storage
    command:
      - -scheme
      - http
      - -public-host
      - storage:4443
  uploader:
    profiles: [dummy]
    image: golang:1.20.4-bullseye
    environment:
      - http_proxy
      - https_proxy
      - no_proxy=storage,firestore,${no_proxy:-}
      - CLOUDSDK_CORE_PROJECT=pictmanager
      - FIRESTORE_EMULATOR_HOST=firestore:8080
      - STORAGE_EMULATOR_HOST=storage:4443
    volumes:
      - .:/app
    working_dir: /app
    depends_on:
      - firestore
      - storage
    command:
      - go
      - run
      - ./cmd/uploader
      - --gcs
      - gs://pictmanager
      - images
  terraform:
    profiles: [dummy]
    image: hashicorp/terraform:1.4.6
    volumes:
      - ./terraform:/workspace
      - ${CLOUDSDK_CONFIG:-}:/root/.config/gcloud
    working_dir: /workspace
  deploy:
    profiles: [dummy]
    image: gcr.io/google.com/cloudsdktool/google-cloud-cli:429.0.0-alpine
    volumes:
      - .:/workspace
      - /workspace/client/node_modules
      - ${CLOUDSDK_CONFIG:-}:/root/.config/gcloud
    environment:
      - CLOUDSDK_CORE_PROJECT=ikedam
    working_dir: /workspace
    command:
      - /bin/sh
      - -e
      - -x
      - -c
      - |
        apk add --no-cache nodejs npm
        (cd client && npm install && npm run build)
        if [ -d static ]; then
          rm -rf static
        fi
        mv client/dist/pictmanager static
        gcloud app deploy --ignore-file=.gcloudignore --quiet
